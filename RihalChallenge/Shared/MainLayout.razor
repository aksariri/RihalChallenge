@inherits LayoutComponentBase
@using Blazored.LocalStorage
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">RihalChallenge</MudText>
        <MudAppBarSpacer />
        <MudIconButton Icon="@Icons.Filled.ColorLens" Color="Color.Default" OnClick="ChangeThemeAsync" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

<MudThemeProvider Theme="@_currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />
@code{
    [Inject]
    public ILocalStorageService LocalStorage { get; set; }

    bool _drawerOpen = true;
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected async override Task OnInitializedAsync()
    {
        //if (await LocalStorage.ContainKeyAsync("theme"))
        //    _themeName = await LocalStorage.GetItemAsStringAsync("theme");
        //else
        //    _themeName = "light";

        _currentTheme = _themeName == "light" ? _lightTheme : _darkTheme;
    }

    MudTheme _currentTheme = null;

    private string _themeName = "light";

    MudTheme _darkTheme = new MudTheme
    {
        Palette = new Palette
        {
            AppbarBackground = "#0097FF",
            AppbarText = "#FFFFFF",
            Primary = "#007CD1",
            TextPrimary = "#FFFFFF",
            Background = "#001524",
            TextSecondary = "#E2EEF6",
            DrawerBackground = "#000000",
            DrawerText = "#FFFFFF",
            Surface = "#000000",
            ActionDefault = "#0C1217",
            ActionDisabled = "#2F678C",
            TextDisabled = "#B0B0B0",
        }
    };

    MudTheme _lightTheme = new MudTheme
    {
        Palette = new Palette
        {
            AppbarBackground = "#0097FF",
            AppbarText = "#FFFFFF",
            Primary = "#007CD1",
            TextPrimary = "#0C1217",
            Background = "#F4FDFF",
            TextSecondary = "#0C1217",
            DrawerBackground = "#9900ff",
            DrawerText = "#0C1217",
            Surface = "#FFFFFF",
            ActionDefault = "#0C1217",
            ActionDisabled = "#2F678C",
            TextDisabled = "#676767",
        }
    };

    private async Task ChangeThemeAsync()
    {
        if (_themeName == "light")
        {
            _currentTheme = _darkTheme;
            _themeName = "dark";
        }
        else
        {
            _currentTheme = _lightTheme;
            _themeName = "light";
        }

        await LocalStorage.SetItemAsStringAsync("theme", _themeName);
    }

}
}

